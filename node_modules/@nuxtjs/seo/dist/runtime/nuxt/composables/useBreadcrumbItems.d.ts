import type { MaybeRefOrGetter } from 'vue';
import type { NuxtLinkProps } from 'nuxt/app';
interface NuxtUIBreadcrumbItem extends NuxtLinkProps {
    label: string;
    labelClass?: string;
    icon?: string;
    iconClass?: string;
    as?: string;
    type?: string;
    disabled?: boolean;
    active?: boolean;
    exact?: boolean;
    exactQuery?: boolean;
    exactMatch?: boolean;
    inactiveClass?: string;
    [key: string]: any;
}
export interface BreadcrumbProps {
    /**
     * Generate the breadcrumbs based on a different path than the current route.
     */
    path?: MaybeRefOrGetter<string>;
    /**
     * The id of the breadcrumb list. It's recommended to provide a unique
     * id when adding multiple breadcrumb lists to the same page.
     */
    id?: string;
    /**
     * Append additional breadcrumb items to the end of the list. This is applied
     * after the `overrides` option.
     */
    append?: BreadcrumbItemProps[];
    /**
     * Prepend additional breadcrumb items to the start of the list. This is applied
     * after the `overrides` option.
     */
    prepend?: BreadcrumbItemProps[];
    /**
     * Override any of the breadcrumb items based on the index.
     */
    overrides?: (BreadcrumbItemProps | false | undefined)[];
    /**
     * Should the schema.org breadcrumb be generated.
     * @default true
     */
    schemaOrg?: boolean;
    /**
     * The Aria Label for the breadcrumbs.
     * You shouldn't need to change this.
     *
     * @default 'Breadcrumbs'
     */
    ariaLabel?: string;
    /**
     * Should the current breadcrumb item be shown.
     *
     * @default false
     */
    hideCurrent?: MaybeRefOrGetter<boolean>;
    /**
     * Should the root breadcrumb be shown.
     */
    hideRoot?: MaybeRefOrGetter<boolean>;
}
export interface BreadcrumbItemProps extends NuxtUIBreadcrumbItem {
    /** Whether the breadcrumb item represents the aria-current. */
    current?: boolean;
    /**
     * The type of current location the breadcrumb item represents, if `isCurrent` is true.
     * @default 'page'
     */
    ariaCurrent?: 'page' | 'step' | 'location' | 'date' | 'time' | boolean | 'true' | 'false';
    to?: string;
    ariaLabel?: string;
    separator?: boolean | string;
    class?: (string | string[] | undefined)[] | string;
    /**
     * @internal
     */
    _props?: {
        first: boolean;
        last: boolean;
    };
}
export declare function useBreadcrumbItems(options?: BreadcrumbProps): import("#imports").ComputedRef<BreadcrumbItemProps[]>;
export {};
