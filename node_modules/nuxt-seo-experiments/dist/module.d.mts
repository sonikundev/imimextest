import * as _nuxt_schema from '@nuxt/schema';

interface ModuleOptions {
    /**
     * Whether the SEO experiements should run.
     *
     * @default true
     */
    enabled: boolean;
    /**
     * Should the files in the public directory be used to infer tags.
     *
     * @default true
     */
    metaDataFiles: boolean;
    /**
     * Should head data be inferred from the current input to fill in the gaps.
     *
     * For example:
     * - If you supply a title, this will automatically add an og:title.
     * - If you provide an og:image, it will automatically add a twitter:image.
     *
     * @default true
     */
    automaticOgAndTwitterTags: boolean;
    /**
     * Attempts to treeshake the `useSeoMeta` function.
     *
     * Can save around 5kb in the client bundle.
     *
     * @default true
     */
    treeShakeUseSeoMeta: boolean;
    mergeWithSiteConfig: boolean;
    extendRouteRules: boolean;
    fixRequiredAbsoluteMetaTagsLinks: boolean;
    extendNuxtConfigAppHeadSeoMeta: boolean;
    extendNuxtConfigAppHeadTypes: boolean;
    setupNuxtConfigAppHeadWithMoreDefaults: boolean;
    /**
     * Enables debug logs and a debug endpoint.
     *
     * @default false
     */
    debug: boolean;
    /**
     * Whether meta tags should be optimised for SEO.
     *
     * @deprecated Use `inferTagsFromFiles` instead.
     */
    seoOptimise?: boolean;
    /**
     * @deprecated Use `automaticTagsFromFiles` instead.
     */
    inferTagsFromFiles?: boolean;
}
declare const _default: _nuxt_schema.NuxtModule<ModuleOptions>;

export { type ModuleOptions, _default as default };
