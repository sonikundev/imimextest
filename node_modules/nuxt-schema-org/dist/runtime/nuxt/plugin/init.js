import { SchemaOrgUnheadPlugin } from "@unhead/schema-org";
import { joinURL } from "ufo";
import { computed } from "vue";
import { defineNuxtPlugin, injectHead, useRoute, useRuntimeConfig, useSiteConfig } from "#imports";
export default defineNuxtPlugin({
  name: "nuxt-schema-org:init",
  enforce: "post",
  setup(nuxtApp) {
    const head = injectHead();
    const _config = useRuntimeConfig();
    const config = import.meta.client ? _config.public["nuxt-schema-org"] : _config["nuxt-schema-org"] || _config.public["nuxt-schema-org"];
    const route = useRoute();
    const siteConfig = useSiteConfig();
    const schemaOrg = computed(() => {
      return {
        ...route.meta?.schemaOrg || {},
        ...siteConfig,
        url: joinURL(siteConfig.url, route.path),
        host: siteConfig.url,
        inLanguage: siteConfig.currentLocale || siteConfig.defaultLocale,
        path: route.path
      };
    });
    head.push({ templateParams: { schemaOrg } });
    head.use(
      SchemaOrgUnheadPlugin({}, async () => {
        const meta = {};
        await nuxtApp.hooks.callHook("schema-org:meta", meta);
        return meta;
      }, {
        minify: config.minify,
        trailingSlash: siteConfig.trailingSlash
      })
    );
  }
});
