'use strict';

const plugin = require('./shared/schema-org.97103adc.cjs');
const unhead = require('unhead');
require('ufo');

function provideResolver(input, resolver) {
  if (!input)
    input = {};
  input._resolver = resolver;
  return input;
}
function defineAddress(input) {
  return provideResolver(input, "address");
}
function defineAggregateOffer(input) {
  return provideResolver(input, "aggregateOffer");
}
function defineAggregateRating(input) {
  return provideResolver(input, "aggregateRating");
}
function defineArticle(input) {
  return provideResolver(input, "article");
}
function defineBreadcrumb(input) {
  return provideResolver(input, "breadcrumb");
}
function defineComment(input) {
  return provideResolver(input, "comment");
}
function defineEvent(input) {
  return provideResolver(input, "event");
}
function defineFoodEstablishment(input) {
  return provideResolver(input, "foodEstablishment");
}
function defineVirtualLocation(input) {
  return provideResolver(input, "virtualLocation");
}
function definePlace(input) {
  return provideResolver(input, "place");
}
function defineHowTo(input) {
  return provideResolver(input, "howTo");
}
function defineHowToStep(input) {
  return provideResolver(input, "howToStep");
}
function defineImage(input) {
  return provideResolver(input, "image");
}
function defineJobPosting(input) {
  return provideResolver(input, "jobPosting");
}
function defineLocalBusiness(input) {
  return provideResolver(input, "localBusiness");
}
function defineOffer(input) {
  return provideResolver(input, "offer");
}
function defineOpeningHours(input) {
  return provideResolver(input, "openingHours");
}
function defineOrganization(input) {
  return provideResolver(input, "organization");
}
function definePerson(input) {
  return provideResolver(input, "person");
}
function defineProduct(input) {
  return provideResolver(input, "product");
}
function defineQuestion(input) {
  return provideResolver(input, "question");
}
function defineRecipe(input) {
  return provideResolver(input, "recipe");
}
function defineReview(input) {
  return provideResolver(input, "review");
}
function defineVideo(input) {
  return provideResolver(input, "video");
}
function defineWebPage(input) {
  return provideResolver(input, "webPage");
}
function defineWebSite(input) {
  return provideResolver(input, "webSite");
}
function defineBook(input) {
  return provideResolver(input, "book");
}
function defineCourse(input) {
  return provideResolver(input, "course");
}
function defineItemList(input) {
  return provideResolver(input, "itemList");
}
function defineListItem(input) {
  return provideResolver(input, "listItem");
}
function defineMovie(input) {
  return provideResolver(input, "movie");
}
function defineSearchAction(input) {
  return provideResolver(input, "searchAction");
}
function defineReadAction(input) {
  return provideResolver(input, "readAction");
}
function defineSoftwareApp(input) {
  return provideResolver(input, "softwareApp");
}
function defineBookEdition(input) {
  return provideResolver(input, "bookEdition");
}
function useSchemaOrg(input) {
  const head = unhead.getActiveHead();
  if (!head)
    return;
  head.use(plugin.UnheadSchemaOrg());
  return unhead.useHead({
    script: [
      {
        type: "application/ld+json",
        key: "schema-org-graph",
        nodes: input
      }
    ]
  });
}

exports.HowToId = plugin.HowToId;
exports.PluginSchemaOrg = plugin.PluginSchemaOrg;
exports.PrimaryArticleId = plugin.PrimaryArticleId;
exports.PrimaryBookId = plugin.PrimaryBookId;
exports.PrimaryBreadcrumbId = plugin.PrimaryBreadcrumbId;
exports.PrimaryEventId = plugin.PrimaryEventId;
exports.PrimaryWebPageId = plugin.PrimaryWebPageId;
exports.PrimaryWebSiteId = plugin.PrimaryWebSiteId;
exports.ProductId = plugin.ProductId;
exports.RecipeId = plugin.RecipeId;
exports.SchemaOrgUnheadPlugin = plugin.SchemaOrgUnheadPlugin;
exports.UnheadSchemaOrg = plugin.UnheadSchemaOrg;
exports.addressResolver = plugin.addressResolver;
exports.aggregateOfferResolver = plugin.aggregateOfferResolver;
exports.aggregateRatingResolver = plugin.aggregateRatingResolver;
exports.articleResolver = plugin.articleResolver;
exports.bookEditionResolver = plugin.bookEditionResolver;
exports.bookResolver = plugin.bookResolver;
exports.breadcrumbResolver = plugin.breadcrumbResolver;
exports.commentResolver = plugin.commentResolver;
exports.courseResolver = plugin.courseResolver;
exports.createSchemaOrgGraph = plugin.createSchemaOrgGraph;
exports.dedupeNodes = plugin.dedupeNodes;
exports.defineSchemaOrgResolver = plugin.defineSchemaOrgResolver;
exports.eventResolver = plugin.eventResolver;
exports.foodEstablishmentResolver = plugin.foodEstablishmentResolver;
exports.howToResolver = plugin.howToResolver;
exports.howToStepDirectionResolver = plugin.howToStepDirectionResolver;
exports.howToStepResolver = plugin.howToStepResolver;
exports.imageResolver = plugin.imageResolver;
exports.itemListResolver = plugin.itemListResolver;
exports.jobPostingResolver = plugin.jobPostingResolver;
exports.listItemResolver = plugin.listItemResolver;
exports.localBusinessResolver = plugin.localBusinessResolver;
exports.movieResolver = plugin.movieResolver;
exports.normaliseNodes = plugin.normaliseNodes;
exports.offerResolver = plugin.offerResolver;
exports.openingHoursResolver = plugin.openingHoursResolver;
exports.organizationResolver = plugin.organizationResolver;
exports.personResolver = plugin.personResolver;
exports.placeResolver = plugin.placeResolver;
exports.productResolver = plugin.productResolver;
exports.questionResolver = plugin.questionResolver;
exports.ratingResolver = plugin.ratingResolver;
exports.readActionResolver = plugin.readActionResolver;
exports.recipeResolver = plugin.recipeResolver;
exports.resolveMeta = plugin.resolveMeta;
exports.resolveNode = plugin.resolveNode;
exports.resolveNodeId = plugin.resolveNodeId;
exports.resolveRelation = plugin.resolveRelation;
exports.reviewResolver = plugin.reviewResolver;
exports.searchActionResolver = plugin.searchActionResolver;
exports.softwareAppResolver = plugin.softwareAppResolver;
exports.videoResolver = plugin.videoResolver;
exports.virtualLocationResolver = plugin.virtualLocationResolver;
exports.webPageResolver = plugin.webPageResolver;
exports.webSiteResolver = plugin.webSiteResolver;
exports.defineAddress = defineAddress;
exports.defineAggregateOffer = defineAggregateOffer;
exports.defineAggregateRating = defineAggregateRating;
exports.defineArticle = defineArticle;
exports.defineBook = defineBook;
exports.defineBookEdition = defineBookEdition;
exports.defineBreadcrumb = defineBreadcrumb;
exports.defineComment = defineComment;
exports.defineCourse = defineCourse;
exports.defineEvent = defineEvent;
exports.defineFoodEstablishment = defineFoodEstablishment;
exports.defineHowTo = defineHowTo;
exports.defineHowToStep = defineHowToStep;
exports.defineImage = defineImage;
exports.defineItemList = defineItemList;
exports.defineJobPosting = defineJobPosting;
exports.defineListItem = defineListItem;
exports.defineLocalBusiness = defineLocalBusiness;
exports.defineMovie = defineMovie;
exports.defineOffer = defineOffer;
exports.defineOpeningHours = defineOpeningHours;
exports.defineOrganization = defineOrganization;
exports.definePerson = definePerson;
exports.definePlace = definePlace;
exports.defineProduct = defineProduct;
exports.defineQuestion = defineQuestion;
exports.defineReadAction = defineReadAction;
exports.defineRecipe = defineRecipe;
exports.defineReview = defineReview;
exports.defineSearchAction = defineSearchAction;
exports.defineSoftwareApp = defineSoftwareApp;
exports.defineVideo = defineVideo;
exports.defineVirtualLocation = defineVirtualLocation;
exports.defineWebPage = defineWebPage;
exports.defineWebSite = defineWebSite;
exports.useSchemaOrg = useSchemaOrg;
